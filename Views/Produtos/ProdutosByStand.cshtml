@model IEnumerable<WebFayre.Models.Produto>
@using Microsoft.AspNetCore.Http;
@using WebFayre.Common;
@using Newtonsoft.Json;


<script type="text/javascript">
    let standCart = @Html.Raw(JsonConvert.SerializeObject(ViewBag.StandShoppingCart));
</script>
<script type="text/javascript" src="/js/cart.js"></script>

@{
    ViewData["Title"] = "Index";
}


<h1>@Html.Raw(ViewBag.NomeStand)</h1>
<h4>@Html.Raw(ViewBag.Disponibilidade)</h4>


<form asp-action="ViewCart">
        <input type="submit" id ="process_cart" value="Create" class="btn btn-primary d-none"/>
</form>


<input id="buy" type="button" value="Comprar" onclick="transplantCart()" />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Preco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Iva)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @{
                        var dotPrice = item.Preco.ToString().Replace(",", ".");
                    }
                    @Html.DisplayFor(modelItem => dotPrice)
                </td>
                <td>
                    @{
                        var dotIva = item.Iva.ToString().Replace(",", ".");
                    }
                    @Html.DisplayFor(modelItem => dotIva)
                </td>
                <td>

                    @{
                        var price = item.Preco.ToString().Replace(",", ".");
                        var iva = item.Iva.ToString().Replace(",", ".");
                    }
                    <button onclick="addProduct('@item.Name.ToString()', @item.IdProduto, @price, @iva, @item.Stock)">Adicionar</button>
                    <input type="number" id="@item.IdProduto" value="0" min="0" max="@item.Stock" readonly/>
                    <button onclick="removeProduct(@item.IdProduto, @price)">Remover</button>

                    <a asp-action="Details" asp-route-id="@item.IdProduto" data-toggle="modal" data-target="#modalProducts" >Details</a> |
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- MODAL MY modalProducts (LIST OF modalProducts I HAVE ACESS TO AS "MANAGER")-->
<div class="modal fade" id="modalProducts" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">My Stands</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Product name
                            </th>
                            <th>
                                Stock
                            </th>
                            <th>
                                Price
                            </th>
                            <th>
                                IVA
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <!--Model.Select(p => p.IdProduto == i)-->
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Stock)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Preco)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Iva)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>
