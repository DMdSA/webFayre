// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebFayre.Models;

#nullable disable

namespace WebFayre.Migrations
{
    [DbContext(typeof(WebFayreContext))]
    partial class WebFayreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FeiraCategoria", b =>
                {
                    b.Property<string>("FeiraId")
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("FeiraCategoria1")
                        .HasColumnType("int");

                    b.HasKey("FeiraId", "FeiraCategoria1")
                        .HasName("PK_feira_categorias_feira_id");

                    b.HasIndex(new[] { "FeiraCategoria1" }, "categoria_feira_idx");

                    b.ToTable("feira_categorias", "webfayre");
                });

            modelBuilder.Entity("PatrocinadorFeira", b =>
                {
                    b.Property<string>("FeiraId")
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("PatrocinadorId")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("FeiraId", "PatrocinadorId")
                        .HasName("PK_patrocinador_feira_feira_id");

                    b.HasIndex(new[] { "FeiraId" }, "feira_id_idx");

                    b.HasIndex(new[] { "PatrocinadorId" }, "patrocinador_id_idx");

                    b.ToTable("patrocinador_feira", "webfayre");
                });

            modelBuilder.Entity("StandPatrocinador", b =>
                {
                    b.Property<string>("IdStand")
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("IdPatrocinador")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdStand", "IdPatrocinador")
                        .HasName("PK_stand_patrocinador_id_stand");

                    b.HasIndex(new[] { "IdPatrocinador" }, "stand_patrocinador_id_idx");

                    b.ToTable("stand_patrocinador", "webfayre");
                });

            modelBuilder.Entity("UtilizadorFavoritaFeira", b =>
                {
                    b.Property<string>("IdUtilizador")
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("IdFeira")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdUtilizador", "IdFeira")
                        .HasName("PK_utilizador_favorita_feira_id_utilizador");

                    b.HasIndex(new[] { "IdFeira" }, "feira_id_idx");

                    b.HasIndex(new[] { "IdUtilizador" }, "utilizador_id_idx");

                    b.ToTable("utilizador_favorita_feira", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Categoriafeira", b =>
                {
                    b.Property<int>("IdCategoriaFeira")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria_feira");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("descricao");

                    b.HasKey("IdCategoriaFeira")
                        .HasName("PK_categoriafeira_id_categoria_feira");

                    b.ToTable("categoriafeira", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.CodigoPostal", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("id");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("localidade");

                    b.HasKey("Id")
                        .HasName("PK_codigo_postal_id");

                    b.ToTable("codigo_postal", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Feira", b =>
                {
                    b.Property<string>("IdFeira")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_feira");

                    b.Property<int>("CapacidadeClientes")
                        .HasColumnType("int")
                        .HasColumnName("capacidade_clientes");

                    b.Property<DateTime>("DataFim")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("data_inicio");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("descricao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FeiraPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("feira_path");

                    b.Property<string>("Morada")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("morada");

                    b.Property<int>("NStands")
                        .HasColumnType("int")
                        .HasColumnName("n_stands");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("IdFeira")
                        .HasName("PK_feira_id_feira");

                    b.ToTable("feira", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Funcao", b =>
                {
                    b.Property<int>("IdFuncao")
                        .HasColumnType("int")
                        .HasColumnName("id_funcao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("descricao");

                    b.HasKey("IdFuncao")
                        .HasName("PK_funcao_id_funcao");

                    b.ToTable("funcao", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("creation_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Funcao")
                        .HasColumnType("int")
                        .HasColumnName("funcao");

                    b.Property<string>("FuncionarioPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("funcionario_path");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("password");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telemovel");

                    b.HasKey("IdFuncionario")
                        .HasName("PK_funcionario_id_funcionario");

                    b.HasIndex(new[] { "Funcao" }, "funcao_funcionario_idx");

                    b.ToTable("funcionario", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Patrocinador", b =>
                {
                    b.Property<string>("IdPatrocinador")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_patrocinador");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefone");

                    b.HasKey("IdPatrocinador")
                        .HasName("PK_patrocinador_id_patrocinador");

                    b.ToTable("patrocinador", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Produto", b =>
                {
                    b.Property<string>("IdProduto")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_produto");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descricao");

                    b.Property<string>("ImagemPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("imagem_path");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(4, 2)")
                        .HasColumnName("iva");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("preco");

                    b.Property<string>("StandId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("stand_id");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProduto")
                        .HasName("PK_produto_id_produto");

                    b.HasIndex(new[] { "StandId" }, "stand_id_idx");

                    b.ToTable("produto", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Promocaofeira", b =>
                {
                    b.Property<int>("IdPromocaoFeira")
                        .HasColumnType("int")
                        .HasColumnName("id_promocao_feira");

                    b.Property<int>("CapacidadeUtilizadores")
                        .HasColumnType("int")
                        .HasColumnName("capacidade_utilizadores");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descricao");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("id_funcionario");

                    b.Property<string>("IdUtilizador")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_utilizador");

                    b.Property<int>("NStands")
                        .HasColumnType("int")
                        .HasColumnName("n_stands");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nome");

                    b.HasKey("IdPromocaoFeira")
                        .HasName("PK_promocaofeira_id_promocao_feira");

                    b.HasIndex(new[] { "IdFuncionario" }, "id_funcionario_idx");

                    b.HasIndex(new[] { "IdUtilizador" }, "id_utilizador_idx");

                    b.ToTable("promocaofeira", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Stand", b =>
                {
                    b.Property<string>("IdStand")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_stand");

                    b.Property<string>("FeiraId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("feira_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("descricao");

                    b.Property<short>("Disponibilidade")
                        .HasColumnType("smallint")
                        .HasColumnName("disponibilidade");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Morada")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("morada");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("nome");

                    b.Property<string>("StandPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("stand_path");

                    b.Property<int>("StandTipoId")
                        .HasColumnType("int")
                        .HasColumnName("stand_tipo_id");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefone");

                    b.HasKey("IdStand", "FeiraId")
                        .HasName("PK_stand_id_stand");

                    b.HasIndex(new[] { "IdStand" }, "IX_stand")
                        .IsUnique();

                    b.HasIndex(new[] { "FeiraId" }, "stand_feira_id_idx");

                    b.HasIndex(new[] { "StandTipoId" }, "stand_tipo_id_idx");

                    b.ToTable("stand", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Standstaff", b =>
                {
                    b.Property<string>("IdStand")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_stand");

                    b.Property<string>("StaffEmail")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("staff_email");

                    b.HasKey("IdStand", "StaffEmail")
                        .HasName("PK_standstaff_1");

                    b.ToTable("standstaff", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("FeiraId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("feira_id");

                    b.Property<string>("UtilizadorId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("utilizador_id");

                    b.HasKey("Id")
                        .HasName("PK_ticket_id");

                    b.HasIndex(new[] { "FeiraId" }, "feira_id_idx");

                    b.HasIndex(new[] { "UtilizadorId" }, "utilizador_id_idx");

                    b.ToTable("ticket", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.TipoStand", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("PK_tipo_stand_id");

                    b.ToTable("tipo_stand", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Utilizador", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("codigo_postal");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nif")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("nif");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("nome");

                    b.Property<string>("Passord")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("passord");

                    b.Property<int>("Porta")
                        .HasColumnType("int")
                        .HasColumnName("porta");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rua");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telemovel");

                    b.Property<string>("UtilizadorPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("utilizador_path");

                    b.HasKey("Id")
                        .HasName("PK_utilizador_id");

                    b.HasIndex(new[] { "CodigoPostal" }, "id_codigo_postal_idx");

                    b.HasIndex(new[] { "Email" }, "utilizador$email_UNIQUE")
                        .IsUnique();

                    b.ToTable("utilizador", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.VendaProduto", b =>
                {
                    b.Property<string>("VendaId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("venda_id");

                    b.Property<string>("ProdutoId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("produto_id");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("preco");

                    b.Property<decimal?>("Quantidade")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("quantidade");

                    b.HasKey("VendaId", "ProdutoId")
                        .HasName("PK_venda_produto_venda_id");

                    b.HasIndex(new[] { "ProdutoId" }, "produto_id_idx");

                    b.ToTable("venda_produto", "webfayre");
                });

            modelBuilder.Entity("WebFayre.Models.Vendum", b =>
                {
                    b.Property<string>("IdVenda")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("id_venda");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("StandId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("stand_id");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("total");

                    b.Property<string>("UtilizadorId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("utilizador_id");

                    b.Property<decimal?>("ValorRegateio")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("valor_regateio");

                    b.HasKey("IdVenda")
                        .HasName("PK_venda_id_venda");

                    b.HasIndex(new[] { "StandId" }, "stand_id_idx");

                    b.HasIndex(new[] { "UtilizadorId" }, "utilizador_id_idx");

                    b.ToTable("venda", "webfayre");
                });

            modelBuilder.Entity("FeiraCategoria", b =>
                {
                    b.HasOne("WebFayre.Models.Categoriafeira", null)
                        .WithMany()
                        .HasForeignKey("FeiraCategoria1")
                        .IsRequired()
                        .HasConstraintName("feira_categorias$categoria_feira");

                    b.HasOne("WebFayre.Models.Feira", null)
                        .WithMany()
                        .HasForeignKey("FeiraId")
                        .IsRequired()
                        .HasConstraintName("feira_categorias$id_feira");
                });

            modelBuilder.Entity("PatrocinadorFeira", b =>
                {
                    b.HasOne("WebFayre.Models.Feira", null)
                        .WithMany()
                        .HasForeignKey("FeiraId")
                        .IsRequired()
                        .HasConstraintName("patrocinador_feira$feira_id");

                    b.HasOne("WebFayre.Models.Patrocinador", null)
                        .WithMany()
                        .HasForeignKey("PatrocinadorId")
                        .IsRequired()
                        .HasConstraintName("patrocinador_feira$patrocinador_id");
                });

            modelBuilder.Entity("StandPatrocinador", b =>
                {
                    b.HasOne("WebFayre.Models.Patrocinador", null)
                        .WithMany()
                        .HasForeignKey("IdPatrocinador")
                        .IsRequired()
                        .HasConstraintName("stand_patrocinador$stand_patrocinador_id");

                    b.HasOne("WebFayre.Models.Stand", null)
                        .WithMany()
                        .HasForeignKey("IdStand")
                        .HasPrincipalKey("IdStand")
                        .IsRequired()
                        .HasConstraintName("FK_stand_patrocinador_stand1");
                });

            modelBuilder.Entity("UtilizadorFavoritaFeira", b =>
                {
                    b.HasOne("WebFayre.Models.Feira", null)
                        .WithMany()
                        .HasForeignKey("IdFeira")
                        .IsRequired()
                        .HasConstraintName("utilizador_favorita_feira$favorita_feira_id");

                    b.HasOne("WebFayre.Models.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("IdUtilizador")
                        .IsRequired()
                        .HasConstraintName("utilizador_favorita_feira$favorita_utilizador_id");
                });

            modelBuilder.Entity("WebFayre.Models.Funcionario", b =>
                {
                    b.HasOne("WebFayre.Models.Funcao", "FuncaoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("Funcao")
                        .IsRequired()
                        .HasConstraintName("funcionario$funcao_funcionario");

                    b.Navigation("FuncaoNavigation");
                });

            modelBuilder.Entity("WebFayre.Models.Produto", b =>
                {
                    b.HasOne("WebFayre.Models.Stand", "Stand")
                        .WithMany("Produtos")
                        .HasForeignKey("StandId")
                        .HasPrincipalKey("IdStand")
                        .IsRequired()
                        .HasConstraintName("FK_produto_stand");

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("WebFayre.Models.Promocaofeira", b =>
                {
                    b.HasOne("WebFayre.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Promocaofeiras")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired()
                        .HasConstraintName("promocaofeira$id_funcionario");

                    b.HasOne("WebFayre.Models.Utilizador", "IdUtilizadorNavigation")
                        .WithMany("Promocaofeiras")
                        .HasForeignKey("IdUtilizador")
                        .IsRequired()
                        .HasConstraintName("promocaofeira$id_utilizador");

                    b.Navigation("IdFuncionarioNavigation");

                    b.Navigation("IdUtilizadorNavigation");
                });

            modelBuilder.Entity("WebFayre.Models.Stand", b =>
                {
                    b.HasOne("WebFayre.Models.Feira", "Feira")
                        .WithMany("Stands")
                        .HasForeignKey("FeiraId")
                        .IsRequired()
                        .HasConstraintName("stand$stand_feira_id");

                    b.HasOne("WebFayre.Models.TipoStand", "StandTipo")
                        .WithMany("Stands")
                        .HasForeignKey("StandTipoId")
                        .IsRequired()
                        .HasConstraintName("stand$stand_tipo_id");

                    b.Navigation("Feira");

                    b.Navigation("StandTipo");
                });

            modelBuilder.Entity("WebFayre.Models.Standstaff", b =>
                {
                    b.HasOne("WebFayre.Models.Stand", "IdStandNavigation")
                        .WithMany("Standstaffs")
                        .HasForeignKey("IdStand")
                        .HasPrincipalKey("IdStand")
                        .IsRequired()
                        .HasConstraintName("FK_standstaff_stand");

                    b.Navigation("IdStandNavigation");
                });

            modelBuilder.Entity("WebFayre.Models.Ticket", b =>
                {
                    b.HasOne("WebFayre.Models.Feira", "Feira")
                        .WithMany("Tickets")
                        .HasForeignKey("FeiraId")
                        .IsRequired()
                        .HasConstraintName("ticket$ticket_feira_id");

                    b.HasOne("WebFayre.Models.Utilizador", "Utilizador")
                        .WithMany("Tickets")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("ticket$ticket_utilizador_id");

                    b.Navigation("Feira");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("WebFayre.Models.VendaProduto", b =>
                {
                    b.HasOne("WebFayre.Models.Produto", "Produto")
                        .WithMany("VendaProdutos")
                        .HasForeignKey("ProdutoId")
                        .IsRequired()
                        .HasConstraintName("venda_produto$venda_produto_id");

                    b.HasOne("WebFayre.Models.Vendum", "Venda")
                        .WithMany("VendaProdutos")
                        .HasForeignKey("VendaId")
                        .IsRequired()
                        .HasConstraintName("venda_produto$venda_id");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WebFayre.Models.Vendum", b =>
                {
                    b.HasOne("WebFayre.Models.Utilizador", "Utilizador")
                        .WithMany("Venda")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FK_venda_utilizador");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("WebFayre.Models.Feira", b =>
                {
                    b.Navigation("Stands");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("WebFayre.Models.Funcao", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("WebFayre.Models.Funcionario", b =>
                {
                    b.Navigation("Promocaofeiras");
                });

            modelBuilder.Entity("WebFayre.Models.Produto", b =>
                {
                    b.Navigation("VendaProdutos");
                });

            modelBuilder.Entity("WebFayre.Models.Stand", b =>
                {
                    b.Navigation("Produtos");

                    b.Navigation("Standstaffs");
                });

            modelBuilder.Entity("WebFayre.Models.TipoStand", b =>
                {
                    b.Navigation("Stands");
                });

            modelBuilder.Entity("WebFayre.Models.Utilizador", b =>
                {
                    b.Navigation("Promocaofeiras");

                    b.Navigation("Tickets");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WebFayre.Models.Vendum", b =>
                {
                    b.Navigation("VendaProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
